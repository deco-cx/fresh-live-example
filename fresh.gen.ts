// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import config from "./deno.json" assert { type: "json" };
import { DecoManifest } from "$live/types.ts";
import * as $0 from "./routes/[...path].tsx";
import * as $1 from "./routes/_middleware.ts";
import * as $2 from "./routes/api/joke.ts";
import * as $3 from "./routes/index.tsx";
import * as $$0 from "./islands/Counter.tsx";
import * as $$1 from "./islands/LiveControls.tsx";
import * as $$$0 from "./sections/Hello.tsx";

const manifest: DecoManifest = {
  routes: {
    "./routes/[...path].tsx": $0,
    "./routes/_middleware.ts": $1,
    "./routes/api/joke.ts": $2,
    "./routes/index.tsx": $3,
  },
  islands: { "./islands/Counter.tsx": $$0, "./islands/LiveControls.tsx": $$1 },
  sections: { "./sections/Hello.tsx": $$$0 },
  functions: {},
  schemas: {
    "./sections/Hello.tsx": {
      "inputSchema": {
        "title": "Hello",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
          },
        },
      },
      "outputSchema": null,
    },
  },
  baseUrl: import.meta.url,
  config,
};

// live â€” this exposes the manifest so the live server can render components dynamically
globalThis.manifest = manifest;

export default manifest;
